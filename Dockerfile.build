FROM alpine:3.6

ARG VERSION

RUN apk upgrade --update --available && \
    apk add --no-cache \
      curl \
      musl-dev \
      && \
    apk add --no-cache -X http://dl-4.alpinelinux.org/alpine/edge/community \
      'go>=1.8.1-r0' \
    && apk add --no-cache -X http://dl-4.alpinelinux.org/alpine/edge/main \
      'ca-certificates>=20161130-r2' \
    && adduser -D developer \
    && rm -f /var/cache/apk/*

# Run subsequent commands as "developer".
USER developer

# https://github.com/golang/go/issues/9344#issuecomment-69944514
RUN cd /tmp && \
    curl -sSLO https://github.com/ssllabs/ssllabs-scan/archive/v${VERSION}.tar.gz && \
    tar xvzf v${VERSION}.tar.gz && \
    cd ssllabs-scan-${VERSION} && \
    GOPATH=~ \
    CGO_ENABLED=0 \
    GOOS=linux \
    LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LIBRARY_PATH \
    go build \
      -a \
      -tags netgo \
      -ldflags '-extldflags "-static" -s' \
      -buildmode exe \
      ssllabs-scan.go

# Build a binary that just sleeps a while.
# This is used in the test harness to prove the process runs as an unprivileged user.
# https://medium.com/@lizrice/non-privileged-containers-based-on-the-scratch-image-a80105d6d341
COPY sleeper.go /tmp/
RUN cd /tmp && \
    GOPATH=~ \
    CGO_ENABLED=0 \
    GOOS=linux \
    LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LIBRARY_PATH \
    go build \
      -a \
      -tags netgo \
      -ldflags '-extldflags "-static" -s' \
      -buildmode exe \
      sleeper.go
